user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;
  error_log  /var/log/nginx/error.log error;
  sendfile        on;
  client_max_body_size 1024m;
  keepalive_timeout  65;

  ssl_protocols TLSv1.2 TLSv1.3; # Enhanced security with modern protocols
  ssl_prefer_server_ciphers on;
  ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256...'; # Strong ciphers

  # HTTP Server - Redirect all HTTP to HTTPS
  server {
    listen 80;
    server_name snf-893977.vm.okeanos.grnet.gr;
    return 301 https://$host$request_uri;
  }

  server {
    listen       443 ssl;
    server_name  snf-893977.vm.okeanos.grnet.gr;

    ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256...';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # React app
    location / {
      root   /app/surveycat;
      index  index.html;
      try_files $uri $uri/ /index.html;
    }

    location /api {
        add_header 'Access-Control-Allow-Origin' 'https://surveycat_front_nginx_1';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,  X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

        proxy_pass http://surveycat_api_surveycat-api-apache_1:40000;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Error pages
    error_page 500 502 503 504 404 /50x.html;
    location = /50x.html {
      root /usr/share/nginx/html;
    }
  }
}
